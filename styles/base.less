@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}


// Syntax styles

.syntax--comment {
  color: @light-gray;
}

.syntax--keyword {
  color: @purple;

  &.syntax--control {
    color: @purple;
  }

  &.syntax--operator {
    color: @syntax-text-color;
  }

  &.syntax--other.syntax--special-method {
    color: @blue;
  }

  &.syntax--other.syntax--unit {
    color: @orange;
  }
}

.syntax--storage {
  color: @purple;
}

.syntax--constant {
  color: @orange;

  &.syntax--character.syntax--escape {
    color: @cyan;
  }

  &.syntax--numeric {
    color: @orange;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}

.syntax--variable {
  color: @red;

  &.syntax--interpolation {
    color: darken(@red, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
  color: @green;


  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @red;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @light-gray;
    }

    &.syntax--string,
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

}

.syntax--support {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--function  {
    color: @cyan;

    &.syntax--any-method {
      color: @blue;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @blue;
  }
  &.syntax--name.syntax--type {
    color: @light-orange;
    text-decoration: none !important;
  }

  &.syntax--other.syntax--inherited-class {
    color: @green;
  }
  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @light-orange;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @red;
    text-decoration: none !important;
  }

  &.syntax--other.syntax--attribute-name {
    color: @orange;

    &.syntax--id {
      color: @blue;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @green;
  }
}


// Mini editor

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}



/*
 * Adds special sauce
 *
//As used in Farmers
@white: #fff;
@very-light-gray: #666;
@light-gray: #62626B;
@gray: #373b41;
@dark-gray: #282a2e;
@very-dark-gray: #000001;

@cyan: #00B9F1;
@blue: #81DEFF;
@purple: #A88FFE;
@green: #A5F56D;
@red: #F95FAA;
@orange: #FFC22C;
@yellow: #FFC22C;
@light-orange: #D6FF00;

 */
atom-text-editor * {
  opacity:1;
}
atom-text-editor {
  color: white;
  background-color: rgb(0,0,0);
  opacity:1;
}
atom-text-editor
{
  .gutter .line-number
  {
    color: #fff !important;
    background-color: rgb(0,0,0);
    opacity:1;
  }
}
atom-text-editor::shadow {
    /* show a dotted line underneath folded lines */
    .fold-marker {
        &::before {
            content: "";
            display: block;
            position: absolute;
            left: 0;
            right: 0;
            border-bottom: 1px dotted @syntax-invisible-character-color;
            opacity:.3;
        }
    }
    .editor {
        .invisible-characters {
            opacity: 1;
        }
    }
    .line.cursor-line .fold-marker {
        &::after {
            color: @syntax-text-color;
        }
        &::before {
          border-color: @syntax-text-color;
        }
    }
    .cursor {
        // transition: opacity 0.2s; // Makes the cursor pulse instead of blink
        border-color: #fc0; // Light Orange
        border-width: 1px;
    }
    // Makes the bracket matcher highlight more noticeable
    .bracket-matcher .region {
        border-bottom: 1px solid yellow;
    }
    // Highlights the cursor line
    .cursor-line {
        background-color: @background-color-highlight;
        width:18px;
    }
    // Make fold arrows always visible
    .line-number.foldable .icon-right {
        visibility: visible !important;
        color:#cf0 !important;
        opacity: 1;
        //border-bottom:1px dotted #fc0;
    }
}
// Without shadow DOM support
.scrollbars-visible-always {
  ::-webkit-scrollbar-track,
  ::-webkit-scrollbar-corner {
    background: #000;
  }
  ::-webkit-scrollbar-thumb {
    background: #fc0;
  }
}



//Overrides
.syntax--underline {
  text-decoration: none !important; //didn't work
}


.syntax--entity {
  &.syntax--name.syntax--type {
    color: @hue-6-2;
  }

  &.syntax--other.syntax--inherited-class {
  }
}



.syntax--keyword {

  &.syntax--control {
  }

  &.syntax--operator {

    &.syntax--assignment {
      color: @hue-6-2;
    }
  }

  &.syntax--other.syntax--special-method {
  }

  &.syntax--other.syntax--unit {
  }
}

.syntax--string {

  &.syntax--regexp {

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @hue-6-2;
    }
  }

  &.syntax--other.syntax--link {
  }
}
.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
    }

    &.syntax--method-parameters,
    &.syntax--function-parameters,
    &.syntax--parameters,
    &.syntax--separator,
    &.syntax--seperator,
    &.syntax--array {
    }

    &.syntax--heading,
    &.syntax--identity {
    }

    &.syntax--bold {
      color: @hue-6-2;
      font-weight: bold;
    }

    &.syntax--italic {
    }
  }

  &.syntax--section {
    &.syntax--embedded {
    }

    &.syntax--method,
    &.syntax--class,
    &.syntax--inner-class {
    }
  }

  &.syntax--terminator {
  }
}

.syntax--meta {
  &.syntax--class {
    color: @hue-6-2;

    &.syntax--body,
    &.syntax--html {
    }
  }

  &.syntax--method-call,
  &.syntax--method {
  }

  &.syntax--definition {
    &.syntax--variable {
    }
  }

  &.syntax--link {
  }

  &.syntax--require {
  }

  &.syntax--selector {
  }

  &.syntax--separator {
  }

  &.syntax--tag {
  }
}
